# -*- coding: utf-8 -*-
"""New paper 3 - experiment for testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DeQFP2D6LvY5RSQdWWB99ZnYuplwZ8Vt
"""

import pandas as pd
import numpy as np

num_samples = 1000
global df
df = pd.DataFrame()

"""# Section 1

## 1.1 What is the country of the project?
* Simplified into continent: Asia, Europe, Africa, North America, South America, Antarctica, and Oceania
* Assumptions of probs = [0.3, 0.14, 0.2, 0.14, 0.14, 0.04, 0.04]
"""

np.random.seed(0)
probs = [0.3, 0.14, 0.2, 0.14, 0.14, 0.04, 0.04]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5, 6], p=probs)
  outcomes.append(outcome)
df['1.1']=outcomes

"""## 1.2 What is the project budget?"""

np.random.seed(0)
probs = [0.25, 0.25, 0.2, 0.2, 0.1]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['1.2']=outcomes

"""## 1.3 What is the percentage of total project budget for cybersecurity management?"""

np.random.seed(0)
probs = [0.1, 0.15, 0.25, 0.25, 0.15, 0.1]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['1.3']=outcomes

"""## 1.4 What is the project durationï¼Ÿ"""

np.random.seed(0)
probs = [0.1, 0.2, 0.35, 0.25, 0.1]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['1.4']=outcomes

"""## 1.5 What is the total number of people involved in the project (labor excluded)?"""

np.random.seed(0)
probs = [0.2, 0.25, 0.25, 0.15, 0.1, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['1.5']=outcomes

"""## 1.6 What is the project type?

"""

np.random.seed(0)
probs = [0.15, 0.2, 0.1, 0.2, 0.3, 0.05] # include other types
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['1.6']=outcomes

"""## 1.7 Whether there is a dedicated cybersecurity legal team for the project?"""

np.random.seed(0)
probs = [0.3,0.6,0.1] # include the situation where it is neutral
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2], p=probs)
  outcomes.append(outcome)
df['1.7']=outcomes

"""# Section 2

## 2.1 What is the project delivery method?
"""

np.random.seed(0)
probs = [0.2, 0.15, 0.1, 0.1, 0.1, 0.2, 0.1, 0.05] # include other types
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5, 6, 7], p=probs)
  outcomes.append(outcome)
df['2.1']=outcomes

"""## 2.2 What is the number of sub-teams at different layers of the project?

"""

def generate_outcomes(probs, num_samples):
    return np.random.choice(range(6), size=num_samples, p=probs)

np.random.seed(0)

layers = {
    '2.2.1': [0.1, 0.2, 0.3, 0.25, 0.15, 0], # starting point, include not applicable
    '2.2.2': [0.25, 0.3, 0.15, 0.15, 0.1, 0.05],
    '2.2.3': [0.35, 0.25, 0.15, 0.1, 0.05, 0.1],
    '2.2.4': [0.4, 0.2, 0.1, 0.1, 0.05, 0.15],
    '2.2.5': [0.45, 0.15, 0.075, 0.05, 0.025, 0.25],
    '2.2.6': [0.5, 0.15, 0.055, 0.02, 0.025, 0.25],
    '2.2.7': [0.55, 0.1, 0.025, 0.015, 0.01, 0.3],
    '2.2.8': [0.6, 0.025, 0.01, 0.01, 0.005, 0.35]
}

for layer_name, probs in layers.items():
    df[layer_name] = generate_outcomes(probs, num_samples)

"""## 2.3 What is the number of communication channels at different layers in the model?"""

def normalized_and_sample(probs, num_samples):
    probs = probs / np.sum(probs)
    discrepancy = 1.0 - np.sum(probs)
    probs[-1] += discrepancy
    return np.random.choice(range(8), size=num_samples, p=probs)

np.random.seed(0)

layers = {
    '2.3.1': [0.1, 0.15, 0.25, 0.2, 0.15, 0.1, 0.05, 0], # starting point, include not applicable
    '2.3.2': [0.13, 0.16, 0.18, 0.17, 0.12, 0.09, 0.045, 0.03],
    '2.3.3': [0.16, 0.17, 0.16, 0.15, 0.1, 0.08, 0.046, 0.06],
    '2.3.4': [0.19, 0.18, 0.14, 0.13, 0.08, 0.07, 0.044, 0.09],
    '2.3.5': [0.22, 0.19, 0.12, 0.11, 0.06, 0.06, 0.042, 0.12],
    '2.3.6': [0.25, 0.2, 0.1, 0.09, 0.04, 0.05, 0.042, 0.05],
    '2.3.7': [0.28, 0.21, 0.08, 0.07, 0.02, 0.04, 0.038, 0.18],
    '2.3.8': [0.31, 0.22, 0.06, 0.05, 0.01, 0.03, 0.036, 0.21]
}

for layer_name, probs in layers.items():
    df[layer_name] = normalized_and_sample(np.array(probs), num_samples)

"""## 2.4 What is the percentage of teams overlapping in different projects?"""

np.random.seed(0)
probs = [0.25, 0.3, 0.25, 0.15, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['2.4']=outcomes

"""# Section 3

## 3.1 What is the scale of your company?
"""

np.random.seed(0)
probs = [0.3, 0.35, 0.2, 0.1, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.1'] = outcomes

"""## 3.2 What is the phase of the construction project when your company is involved?"""

np.random.seed(0)
probs = [0.15, 0.20, 0.25, 0.3, 0.1]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.2'] = outcomes

"""## 3.3 Is there a dedicated IT team for the project? The IT team members can be either from your company and your subcontractors for the project."""

np.random.seed(0)
probs = [0.35, 0.55, 0.1] # include the situation where it is neutral
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2], p=probs)
  outcomes.append(outcome)
df['3.3'] = outcomes

"""## 3.4 What is the total number of critical digital assets held by your company and subcontractors for the project?"""

np.random.seed(0)
probs = [0.20, 0.30, 0.30, 0.15, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.4'] = outcomes

"""## 3.5 What is the total number of user endpoints of digital devices utilized by your team and subcontractors for the project?"""

np.random.seed(0)
probs = [0.20, 0.30, 0.30, 0.15, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.5'] = outcomes

"""## 3.6 What is the percentage of digital devices with firewalls or intrusion detection systems involved in the project? Please consider all digital devices from your company and your subcontractors."""

np.random.seed(0)
probs = [0.05, 0.15, 0.25, 0.30, 0.25]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.6'] = outcomes

"""## 3.7 What is the network type used for the project by your company or your subcontractors: Public or Private?"""

np.random.seed(0)
probs = [0.3, 0.4, 0.3]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2], p=probs)
  outcomes.append(outcome)
df['3.7'] = outcomes

"""## 3.8 What is the percentage of individuals who fail phishing tests after completing mandatory training? Please include all personnel from your company and subcontractors, regardless of their project involvement."""

np.random.seed(0)
probs = [0.35, 0.30, 0.20, 0.10, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.8'] = outcomes

"""## 3.9 What is the estimated Mean Time to Respond (MTTR) in hours? (Report the average MTTR of your company and subcontractors)"""

np.random.seed(0)
probs = [0.10, 0.30, 0.30, 0.20, 0.10]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['3.9'] = outcomes

"""# Section 4

## 4.1 What is the total number of important OT equipment involved?
"""

np.random.seed(0)
probs = [0.30, 0.25, 0.20, 0.15, 0.07, 0.03]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['4.1'] = outcomes

"""## 4.2 What is the level of physical access control mechanism to OT equipment?"""

np.random.seed(0)
probs = [0.10, 0.20, 0.30, 0.25, 0.15]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['4.2'] = outcomes

"""## 4.3 What is the percentage of OT equipment isolated from project's general network?"""

np.random.seed(0)
probs = [0.05, 0.15, 0.30, 0.30, 0.20]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['4.3'] = outcomes

"""## 4.4 What is the average age of the important OT equipment?"""

np.random.seed(0)
probs = [0.25, 0.35, 0.25, 0.10, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['4.4'] = outcomes

"""## 4.5 What is the level of authentication mechanism to access the HMI (Human Machine Interface)?"""

np.random.seed(0)
probs = [0.10, 0.40, 0.25, 0.15, 0.10]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['4.5'] = outcomes

"""# Section 5

## 5.1 What is the average level of commitment to corporate governance, ethical practices and cybersecurity policy? Please consider your team and your subcontractors.
"""

np.random.seed(0)
probs = [0.05, 0.10, 0.20, 0.35, 0.30]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['5.1'] = outcomes

"""## 5.2 What is the average frequency of security training per year? Please consider your team and your subcontractors."""

np.random.seed(0)
probs = [0.20, 0.30, 0.20, 0.15, 0.10, 0.05]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['5.2'] = outcomes

"""## 5.3 Do you allow password reuse for any project-related software, systems, or accounts (e.g., project management tools, email, internal networks, file storage, etc.)? Please consider your team and your subcontractors."""

np.random.seed(0)
probs = [0.7, 0.3]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1], p=probs)
  outcomes.append(outcome)
df['5.3'] = outcomes

"""## 5.4 Does internet access within your construction project require Multi-Factor Authentication (MFA) or utilize other methods such as biometrics or face recognition? Please consider your team and your subcontractors."""

np.random.seed(0)
probs = [0.6, 0.4]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1], p=probs)
  outcomes.append(outcome)
df['5.4'] = outcomes

"""## 5.5 What is the percentage of people who have access to sensitive information in the project? The people should come from your team and your subcontractors  involved in the project."""

np.random.seed(0)
probs = [0.45, 0.35, 0.10, 0.05, 0.03, 0.02]  # these are the probabilities you've determined
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4, 5], p=probs)
  outcomes.append(outcome)
df['5.5'] = outcomes

"""## 5.6 What is the average team member variability over a 3-month period? The team members should come from your team and your subcontractors involved in the project."""

np.random.seed(0)
probs = [0.55, 0.30, 0.10, 0.03, 0.02]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['5.6'] = outcomes

"""## 5.7 What is the average socioeconomic level of the people involved in the project? Please consider the team members (labor excluded) from your company and your subcontractors involved in the project."""

np.random.seed(0)
probs = [0.10, 0.20, 0.40, 0.20, 0.10]
outcomes = []
for i in range(num_samples):
  outcome = np.random.choice([0, 1, 2, 3, 4], p=probs)
  outcomes.append(outcome)
df['5.7'] = outcomes

"""# Data transformation to one-hot representation

"""

df_str = df.astype(str)
global df_one_hot
df_one_hot = pd.get_dummies(df_str)
df_one_hot.head()

"""# Probability transformation"""
global df_p
df_p = pd.DataFrame()

# 1.1
continent_codes = {
    1: 0.8, # Asia
    2: 0.7, # Europe
    3: 0.9, # Africa
    4: 0.65, # North America
    5: 0.7, # South America
    6: 0.6, # Antarctica
    7: 0.7  # Oceania
}

df_p['1.1'] = (df['1.1']+1).map(continent_codes)

# 1.2
df_p['1.2'] = (df['1.2']+1) / 5.0

# 1.3
df_p['1.3'] = (6-df['1.3']) / 6.0

# 1.4
df_p['1.4'] = (df['1.4']+1) / 5.0

# 1.5
df_p['1.5'] = (df['1.5']+1) / 6.0

# 1.6
df_p['1.6'] = (df['1.6']+1) / 5.0

# 1.7
p = {
    0: 0.4,
    1: 1,
    2: 0.7,
}

df_p['1.7'] = (df['1.7']).map(p)

# 2.1
project_type = {
    1: 0.7,
    2: 0.8,
    3: 0.7,
    4: 0.7,
    5: 0.7,
    6: 0.9,
    7: 0.7
}

df_p['2.1'] = (df['2.1']+1).map(project_type)

# 2.2
for i in range(1, 9):  # 1 to 8 layer
    column_name = f'2.2.{i}'  # form the column name
    df_p[column_name] = (df[column_name] + 1) / 5
    df_p.loc[df[column_name] == 5, column_name] = 0

# 2.3
for i in range(1, 9):  # 1 to 8 layer
    column_name = f'2.3.{i}'  # form the column name
    df_p[column_name] = (df[column_name] + 1) / 7
    df_p.loc[df[column_name] == 7, column_name] = 0

# 2.4
df_p['2.4'] = (df['2.4']+1) / 5.0

# 3.1
df_p['3.1'] = (5-df['3.1']) / 5.0

# 3.2
phase = {
    1: 0.6,
    2: 1,
    3: 0.8,
    4: 0.6,
    5: 0.2,
}
df_p['3.2'] = (df['3.2']+1).map(phase)

# 3.3
IT = {
    1: 0.2,
    2: 1,
    3: 0.5,
}
df_p['3.3'] = (df['3.3']+1).map(IT)

# 3.4
df_p['3.4'] = (df['3.4']+1) / 5.0

# 3.5
df_p['3.5'] = (df['3.5']+1) / 5.0

# 3.6
df_p['3.6'] = (5-df['3.6']) / 5.0

# 3.7
network = {
    1: 1,
    2: 0.2,
    3: 0.5,
}
df_p['3.7'] = (df['3.7']+1).map(network)

# 3.8
df_p['3.8'] = (df['3.8']+1) / 5.0

# 3.9
df_p['3.9'] = (df['3.9']+1) / 5.0

# 4.1
df_p['4.1'] = (df['4.1']+1) / 6.0

# 4.2
df_p['4.2'] = (5-df['4.2']) / 5.0

# 4.3
df_p['4.3'] = (5-df['4.3']) / 5.0

# 4.4
df_p['4.4'] = (df['4.4']+1) / 5.0

# 4.5
df_p['4.5'] = (5-df['4.5']) / 5.0

# 5.1
df_p['5.1'] = (5-df['5.1']) / 5.0

# 5.2
df_p['5.2'] = (6-df['5.2']) / 6.0

# 5.3
password = {
    1: 1,
    2: 0.2,
}
df_p['5.3'] = (df['5.3']+1).map(password)

# 5.4
password = {
    1: 0.2,
    2: 1,
}
df_p['5.4'] = (df['5.4']+1).map(password)

# 5.5
df_p['5.5'] = (df['5.5']+1) / 6

# 5.6
df_p['5.6'] = (df['5.6']+1) / 5.0

# 5.7
df_p['5.7'] = (5-df['5.7']) / 5.0

df_p = df_p.round(3)